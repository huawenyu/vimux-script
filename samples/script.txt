# sample 1: shell cmd and interact with user
#
test example {{{1
# comment begin with #
# group start from {{{<number>
# not begin with eval will send to TmuxRunner to execute
ls -lrt
whoami
ls -l
# begin with eval will send to the current vim to execute as script
eval echom matchstr(output, 'gnome')
date
ls -a
eval echom matchstr(output, 'gnome')
# exec skip type: comment, empty line

# endwith space, wait your input
ls 
# the variable output is the runner's command output
eval let a = matchstr(output, 'gconf')
# contain eval: the eval part will send to current vim to execute
#   and the execute's message will as replaced string send to TmuxRunner
ls -l eval echo a

#eval if match(output, 'true') > -1 | call vimux#Run("ls -lrt") | else | call vimux#Run("ls") | endif
# group end }}}
}}}


# sample 2
login box {{{1

telnet 10.1.2.124
admin
<Enter>

diag debug console no enable

# debug wad
diag debug app wad -1
diag test app wad 2200

<capture> 4
diag test app wad 7
<match> |Set watchdog .*\.|
<case> |enable.| diag test app wad 7
#<eval> echom "match: " . g:outstr[13:-2]
diag test app wad $<g:outstr[13:-2]>

}}}
